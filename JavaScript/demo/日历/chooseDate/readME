流程
1、根据年份、月份获取对应的日期数据
日期数据=上一月的日期+这个月的日期+下个月的日期
一个星期是有七天，我们最长的一个月是31天，就是4个星期余三天。如果每一行代表星期，那么五行就可以搞定了。但是看效果演示图我们可以看出来，我们用了6行。为什么会多一行？这个问题很好解释，并不是每一个月的第一天都是从星期天开始的，
所以我们要考虑最坏的情况。如果从星期六开始，此时需要6+31=37格（换上一下，就是5行多2格）。为了满足这种最坏的情况，我们就需要6行了。

上个月
/**
 *获取currentYear年currentMonth月的第一天是星期几
 *month参数是要比实际上少一天的
 *0 代表星期天 6代表星期六
 **/
new Date(currentYear,currentMonth-1,1).getDay();
当我得出需要几个上一月日期数据之后，我们还需要一样东西。那就是上一个月的最后一天，根据这个来往前推。

/**
 *获取currentYear年currentMonth月的最后一天的日期
 *month参数是要比实际上少一天的
 **/
new Date(currentYear,currentMonth-1,0).getDate();
这个月
这个月的日期数据相比较上一个就简单多了，只需要知道这一月的第一天和最后一天即可。

//获取currentYear年currentMonth月的第一天的日期
new Date(currentYear,currentMonth-1,1).getDate();
//获取currentYear年currentMonth月的最后一天的日期
new Date(currentYear,currentMonth,0).getDate();
下一月
这块数据也非常简单，总共7*6=42格，剩下几格就往里面填几个。我们这里只需要知道下一个月的第一天是多少就行了。

//获取currentYear年currentMonth月的下一月的一天的日期
new Date(currentYear,currentMonth,1).getDate();

2、年份、月份的增加减少按钮
这块没有难的点，需要注意的就是临界值得判断。比如说12月再加1个月，不能变成13月，而是年份加1，月份置为1.

3、根据input框的位置，设置时间选择器的位置
这块内容也很简单，弄清楚left值和top值是如何计算的即可。

top值=input输入框到浏览器窗口顶部的距离+input自身的高度
left值=input输入框到浏览器窗口左边的距离

4、日期的选择
  这里没有难点，但是有一个新手非常容易犯错的错误。在为日期绑定事件的时候，新手很容易就会找到当前页面所有日期给它绑定事件。这样显然是行不通的，因为日期数据是不断变得，也就是日期这些dom元素是会替换了的，之前绑定的事件也就不见了，所以我建议大家用事件委托机制。可能会有人反驳我，每一天改变年份和月份的时候在重新绑定一次不就完了，当然这样也是可以的。但是不建议，简单的事情不要复杂化，无端增加开销。